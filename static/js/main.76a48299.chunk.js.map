{"version":3,"sources":["components/Section.js","components/FeedbackOptions.js","components/Status.js","components/Notification.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","type","onClick","props","onLeaveFeedback","React","Component","Status","good","neutral","bad","total","positiveFeedback","Notification","message","App","state","e","this","setState","prevState","Math","round","countTotalFeedback","leaveFeedback","bind","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAU,WAAnB,UACE,6BAAMF,IACLC,K,SCFDE,E,4JACJ,WAAU,IAAD,OACP,OACE,qCACE,wBACEC,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,SAH5C,kBAOA,wBACEH,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,YAH5C,qBAOA,wBACEH,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,QAH5C,wB,GAlBsBC,IAAMC,WAiCrBN,ICfAO,EAlBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,iBAAzB,OACX,sBAAKb,UAAU,WAAf,UACI,sCAAQ,sBAAMA,UAAU,OAAhB,SAAwBS,OAChC,yCAAW,sBAAMT,UAAU,OAAhB,SAAwBU,OACnC,qCAAO,sBAAMV,UAAU,OAAhB,SAAwBW,OAC/B,uCAAS,sBAAMX,UAAU,OAAhB,SAAwBY,OACjC,mDAAqB,sBAAMZ,UAAU,OAAhB,SAAwBa,WCPtC,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGf,UAAU,WAAb,SAAyBe,I,ICE5BC,E,4MACJC,MAAQ,CACRR,KAAM,EACNC,QAAS,EACTC,IAAK,G,mDAGL,SAAcO,GACZC,KAAKC,UAAS,SAACC,GACb,OAAO,eAAGH,EAAIG,EAAUH,GAAK,Q,gCAIjC,WACE,OAAOC,KAAKF,MAAMR,KAAOU,KAAKF,MAAMP,QAAUS,KAAKF,MAAMN,M,6CAG3D,WACI,OAA2B,IAApBQ,KAAKF,MAAMR,KAClB,IACAa,KAAKC,MAAyB,IAAlBJ,KAAKF,MAAMR,KAAcU,KAAKK,sBAAwB,M,oBAGtE,WACE,OACE,qCACE,cAAC3B,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBO,gBAAiBc,KAAKM,cAAcC,KAAKP,UAE5D,cAACtB,EAAD,CAASC,MAAM,eACdqB,KAAKK,qBACJ,cAAC,EAAD,CACEf,KAAMU,KAAKF,MAAMR,KACjBC,QAASS,KAAKF,MAAMP,QACpBC,IAAKQ,KAAKF,MAAMN,IAChBC,MAAOO,KAAKK,qBACZX,iBAAkBM,KAAKQ,oCAGzB,cAACb,EAAD,CAAcC,QAAQ,6B,GAvCdT,IAAMC,WA4CTS,IC3CfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.76a48299.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className=\"contaner\">\r\n      <h1 >{title}</h1>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.any,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css'\r\n\r\nclass FeedbackOptions extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => this.props.onLeaveFeedback(\"good\")}\r\n        >\r\n          Good\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => this.props.onLeaveFeedback(\"neutral\")}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          onClick={() => this.props.onLeaveFeedback(\"bad\")}\r\n        >\r\n          Bad\r\n        </button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func\r\n};\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css'\r\n\r\nconst Status = ({good,neutral,bad,total,positiveFeedback}) => (\r\n    <div className=\"contaner\">\r\n        <p>Good:<span className=\"span\">{good}</span></p>\r\n        <p>Neutral:<span className=\"span\">{neutral}</span></p>\r\n        <p>Bad:<span className=\"span\">{bad}</span></p>\r\n        <p>Total:<span className=\"span\">{total}</span></p>\r\n        <p>Positive feedback:<span className=\"span\">{positiveFeedback}</span></p>\r\n    </div>\r\n)\r\n\r\nStatus.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedback: PropTypes.string\r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className=\"contaner\">{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n}","import React from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Status from './components/Status';\nimport Notification from './components/Notification';\n\nclass App extends React.Component{\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  }\n    \n  leaveFeedback(e) {\n    this.setState((prevState) => {\n      return { [e]: prevState[e] + 1 }\n    })\n  }\n  \n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad  \n  }\n\n  countPositiveFeedbackPercentage() {\n      return this.state.good === 0\n    ? \"0\"\n    : Math.round((this.state.good * 100) / this.countTotalFeedback()) + \"%\";\n  }\n  \n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.leaveFeedback.bind(this)} />\n        </Section>\n        <Section title=\"Statistics\" />\n        {this.countTotalFeedback() ? (\n          <Status\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positiveFeedback={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </>\n        )}}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}